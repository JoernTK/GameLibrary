package de.wald_ohne_blaetter.gamelibrary.game;

import java.math.BigDecimal;
import java.util.Date;

import jakarta.persistence.Entity;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import lombok.AllArgsConstructor;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;
import lombok.ToString;


/**
 * Represents a game in the game library.
 * <p>
 * This class is used as a JPA entity to store relevant information about a game.
 * </p>
 *
 * @author Joern Klassen
 * @version 0.0.1
 * @since 2025-03-21
 */
@Entity
@Getter
@Setter
@NoArgsConstructor
@AllArgsConstructor
@ToString(exclude = "price")
public class Game
{

  /**
   * Unique ID of the game. Automatically generated by the database.
   */
  @Id
  @GeneratedValue(strategy = GenerationType.IDENTITY)
  private Long game_id;

  /**
   * Name of the game. Must not be null or empty.
   */
  private String game_name;

  /**
   * Date of the release of the game. Can be null or empty.
   */
  private Date game_release_date;

  /**
   * Unique ID of a publisher. Automatically generated by the database.
   */


  /**
   * Price of the game. Stored as {@link BigDecimal} to avoid rounding errors.
   */
  private BigDecimal game_price;

  /**
   * Source or link were the game was bought.
   */
  private String game_link;

  /**
   * Unique PlayerID. Automatically generated by the database.
   */


  /**
   * The time that is needed to finish the game referring to the box-information's
   */
  private Integer game_length;

  /**
   * The time that is needed to finish the game referring to the players experience
   */
  private Integer game_experience_length;

  /**
   * The Space of the playing field. The size represents how big the Table needs to be. Can be null.
   */
  private Integer game_playing_field;

  /**
   *
   */



}
